<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>whaleex-ci</groupId>
  <artifactId>whaleex-web</artifactId>
  <version>1.1.1</version>

  <name>whaleex-web</name>
  <properties>
    <skip.compile>false</skip.compile>
    <skip.push>false</skip.push>
    <registry.host>registry.cn-hangzhou.aliyuncs.com</registry.host>
    <repository>${project.groupId}</repository>
    <framework.dir>framework</framework.dir>
    <product>whaleex</product>
  </properties>
  <build>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <configuration>
              <workingDirectory>.</workingDirectory>
              <executable>sh</executable>
              <commandlineArgs>${framework.dir}/docker/build.sh ${project.name} ${project.version} ${framework.dir}</commandlineArgs>
              <skip>${skip.compile}</skip>
            </configuration>
            <id>compile</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <execution>
            <configuration>
              <workingDirectory>.</workingDirectory>
              <executable>j2</executable>
              <commandlineArgs>${framework.dir}/docker/docker-compose.yml.tpl</commandlineArgs>
              <outputFile>docker-compose.yml</outputFile>
              <environmentVariables>
                <PROJECT_NAME>${project.name}</PROJECT_NAME>
                <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                <PROJECT_GROUP>${repository}</PROJECT_GROUP>
                <REGISTRY_HOST>${registry.host}</REGISTRY_HOST>
              </environmentVariables>
            </configuration>
            <id>generate_docker_compose</id>
            <phase>compile</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
          <!-- <execution>
            <configuration>
              <workingDirectory>.</workingDirectory>
              <executable>/usr/bin/deber</executable>
              <commandlineArgs>
                -app=${project.name} -version=${project.version}</commandlineArgs>
            </configuration>
            <id>datayes-fe-boilerplate-deb</id>
            <phase>package</phase>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution> -->
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>1.0.0</version>
        <configuration>
          <imageName>${project.name}:${project.version}</imageName>
          <serverId>${registry.host}</serverId>
          <registryUrl>https://${registry.host}/v2/</registryUrl>
          <buildArgs>
            <PROJECT>${project.name}</PROJECT>
            <VERSION>${project.version}</VERSION>
            <PRODUCT>${product}</PRODUCT>
          </buildArgs>
          <dockerDirectory>${framework.dir}/docker</dockerDirectory>
          <resources>

            <resource>
              <targetPath>/whaleex/templates</targetPath>
              <directory>${framework.dir}/docker/deploy</directory>
            </resource>
            <resource>
              <targetPath>/whaleex/templates</targetPath>
              <directory>${basedir}/docker/deploy</directory>
            </resource>
            <resource>
              <targetPath>/whaleex/${project.name}</targetPath>
              <directory>build</directory>
            </resource>
          </resources>
        </configuration>
        <executions>
          <execution>
            <id>build-image</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>build</goal>
            </goals>
          </execution>
          <execution>
            <id>tag-image</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>tag</goal>
            </goals>
            <configuration>
              <image>${project.name}:${project.version}</image>
              <newName>${registry.host}/${repository}/${project.name}:${project.version}</newName>
            </configuration>
          </execution>
          <execution>
            <id>push-image</id>
            <phase>install</phase>
            <goals>
              <goal>push</goal>
            </goals>
            <configuration>
              <imageName>${registry.host}/${repository}/${project.name}:${project.version}</imageName>
              <skip>${skip.push}</skip>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>1.8</version>
        <executions>
        <execution>
            <id>attach-artifacts</id>
            <phase>install</phase>
            <goals>
                <goal>attach-artifact</goal>
            </goals>
            <configuration>
                <artifacts>
                    <artifact>
                        <file>target/${project.name}-${project.version}.deb</file>
                        <type>deb</type>
                    </artifact>
                </artifacts>
            </configuration>
        </execution>
        <execution>
            <id>attach-artifacts-rpm</id>
            <phase>install</phase>
            <goals>
                <goal>attach-artifact</goal>
            </goals>
            <configuration>
                <artifacts>
                    <artifact>
                        <file>target/${project.name}-${project.version}.rpm</file>
                        <type>rpm</type>
                    </artifact>
                </artifacts>
            </configuration>
        </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
